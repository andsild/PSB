# Specified in order of priority, i.e. top item is done first, last item last

gongs task: check special images

make OOP to avoid throwing so many variables around

 compute line on I and U
    so it is easier to analytically get the solution.

fix division by pixel size

plot theoretical bounds

does cimg have to grayscale..?  
cimg has path stuff


make program user friendly!
    output what is going on
    estimate a total loading time betterly

run on all images with iterative

gnuplot from c++, not bash
    havily relies on boost


 Make the graphs loggy
    easier to see what's going on 


 render two images, show plot for these two.



 timing different functions / iterations

 make histograms
    cimg has this

 code refactoring

 implement FFT

 Variation of parameters used in functions
    discretization
    Ï‰


 multi-threaded, to be faster per image
    red black
    multitraad


 Detection of convergence, etc
    http://www.physics.buffalo.edu/phy410-505/2011/topic3/app1/index.html
        [described in the moddile of the page]

 Other optimizations?
    hvordan ser en matrise ut mot slutten? kan noen deler kuttes ut?

My translation to vector takes about 0.1 seconds for each image - maybe there is
    better way

# Gong ville gjoore dette 
((adding some of the more advanced))
